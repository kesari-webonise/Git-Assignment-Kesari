Useful Git Commands

1. git config 
Sets configuration values for your user name, email. Used to track who has made what changes.
git config –global user.name “My name”
git config –global user.email “user@domain.com”
2. git init 
Initializes a git repository – creates the initial .git directory in a new or in an existing project. Example:
git init
3.git clone 
Creates a GIT repository copy from a remote source. Also adds the original location as a remote so you can fetch from it again and push to it if you have permissions. Example:
git clone git@github.com:user/test.git
4. git add 
Adds files changes in your working directory to your index. Example:
git add “file name”
5. git rm 
Removes files from your index and your working directory so they will not be tracked. Example:
git rm “file name”
6. git commit 
Takes all of the changes written in the index, creates a new commit object pointing to it and sets the branch to point to that new commit. Examples:
git commit -m ‘committing added changes’

7. git status 
Shows you the status of files in the index versus the working directory. It will list out files that are untracked (only in your working directory), modified (tracked but not yet updated in your index), and staged (added to your index and ready for committing). Example:
git status


8. git merge 
Merges one or more branches into your current branch and automatically creates a new commit if there are no conflicts. Example:
git merge newbranchversion

9. git reset 
Resets your index and working directory to the state of your last commit. Example:
git reset --hard HEAD

10. git pull 
Fetches the files from the remote repository and merges it with your local one. Example:
git pull origin

11. git push 
Pushes all the modified local objects to the remote repository and advances its branches. Example:
git push origin master

12. git log 
Shows a listing of commits on a branch including the corresponding details. Example:
git log

13. git diff 
Generates patch files or statistics of differences between paths or files in your git repository, or your index or your working directory. Example:
git diff
